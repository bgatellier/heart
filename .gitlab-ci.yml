variables:
  # Use a The Personal Access Token to allow write operations on the repository from the CI,
  # as the $CI_JOB_TOKEN only allows read operations.
  # The Personal Access Token is the password, and the login is the Gitlab username to which the token is linked.
  RUSHJSON_REPOSITORY_URL_CI: 'https://bgatellier:$GITLAB_CI_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git'

default:
  # The version must match the minimum version declared in rush.json
  image: node:14

include:
  - local: 'ci/utils/base-job.yml'
  - local: 'ci/utils/condition.yml'
  - local: 'ci/modules/heart-api.yml'
  - local: 'ci/modules/heart-bigquery.yml'
  - local: 'ci/modules/heart-cli.yml'
  - local: 'ci/modules/heart-core.yml'
  - local: 'ci/modules/heart-dareboost.yml'
  - local: 'ci/modules/heart-lighthouse.yml'
  - local: 'ci/modules/heart-observatory.yml'
  - local: 'ci/modules/heart-greenit.yml'
  - local: 'ci/modules/heart-slack.yml'
  - local: 'ci/modules/heart-ssllabs-server.yml'
  - local: 'ci/website.yml'

üèó Build:
  extends:
    - .install
    - .build
  rules:
    # Either .on-mr, either .on-default
    - !reference [.on-mr, rules]
    - !reference [.on-default, rules]
  interruptible: true

# Checks code linting
üíÖ Lint:
  stage: test
  extends:
    - .install
    - .on-mr
  dependencies:
    - üèó Build
  script:
    - node common/scripts/install-run-rush.js lint
  interruptible: true

# Checks that a changelog has been provided
üìù Missing changelog:
  stage: test
  extends:
    - .install
    - .on-mr
  dependencies:
    - üèó Build
  script:
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME -a
    # Checks that a changelog has been provided, regarding the target branch
    - node common/scripts/install-run-rush.js change
      --target-branch origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      --verify
  interruptible: true

üêõ Test:
  extends:
    - .test
    - .on-mr
  dependencies:
    - üèó Build
  script:
    - node common/scripts/install-run-rush.js test --verbose
  interruptible: true

# Publish packages to NPM.
# By default, the dry-run mode is enabled and the policy version is set to individualVersion.
# These two behaviors can be changed with the PUBLISH and VERSION_POLICY variables.
üöÄ Publish the packages to NPM:
  stage: deploy
  extends:
    - .install
    - .on-web
  variables:
    PUBLISH: 0
    VERSION_POLICY: "individualVersion"
  dependencies:
    - üèó Build
  script:
    - git remote set-url origin $RUSHJSON_REPOSITORY_URL_CI
    # Set Git publisher values (required by Rush)
    - git config --local user.name "Fabernovel"
    - git config --local user.email "heart@fabernovel.com"
    - echo "Publishing to NPM the packages with the ${VERSION_POLICY} version policy..."
    - node common/scripts/install-run-rush.js version
      --bump
      --target-branch $CI_COMMIT_REF_NAME
      --version-policy $VERSION_POLICY
    # Create the --publish option for rush publish command.
    - if (( $PUBLISH == 1 )); then PUBLISH_OPTION="--publish"; else PUBLISH_OPTION=""; fi
    # $CI_COMMIT_REF_NAME is 'master', as long as this job is restricted to run on the 'master' branch
    - node common/scripts/install-run-rush.js publish
      --include-all
      $PUBLISH_OPTION
      --target-branch $CI_COMMIT_REF_NAME
      --version-policy $VERSION_POLICY
