variables:
  HOST_REPO_PIPELINE_URL: 'https:\/\/gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com\/'
  HOST_REPO_URL: 'git@gitlab.com:'

.install:
  before_script:
    # Update the rush.json repository url with the one used by the CI, to make the rush commands works
    - sed -i -e "s/$HOST_REPO_URL/$HOST_REPO_PIPELINE_URL/g" rush.json
    - node common/scripts/install-run-rush.js install

# Install packages using Rush
.build:
  stage: build
  artifacts:
    paths:
      - common/temp/node_modules/
      - modules/
      - rush.json
  script:
    - node common/scripts/install-run-rush.js build --verbose

# Only triggered on merge requests creation and update
# Allows to access the $CI_MERGE_REQUEST_TARGET_BRANCH_NAME environment variable
.mr:
  only:
    - merge_requests

.npm-publication:
  only:
    - web
    - branches
    - /^master$/

default:
  # The version must match the minimum version declared in rush.json
  image: node:10.13.0

# Build every packages for merge requests
Build for MR:
  extends:
    - .install
    - .build
    - .mr

# Checks code linting
Lint:
  stage: test
  extends:
    - .install
    - .mr
  dependencies:
    - Build for MR
  script:
    - echo 'Linting...'
    - node common/scripts/install-run-rush.js lint

# Checks that a changelog has been provided
Missing changelog:
  stage: test
  extends:
    - .install
    - .mr
  dependencies:
    - Build for MR
  script:
    - echo 'Checking for missing change logs...'
    - git fetch origin $CI_MERGE_REQUEST_TARGET_BRANCH_NAME -a
    # Checks that a changelog has been provided, regarding the target branch
    - node common/scripts/install-run-rush.js change
      --target-branch origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
      --verify

# Build every packages during NPM publication
Build for NPM publication:
  extends:
    - .install
    - .build
    - .npm-publication

# Publish to NPM.
# By default, the dry-run mode is enabled and the policy version is set to individualVersion.
# These two behaviors can be changed with the PUBLISH and VERSION_POLICY variables.
# This job is only triggered:
# - if the pipeline as been created from the Gitlab web interface (only:web)
# - if the branch name is `master` (only:branches and only:/^master$/)
# - if the user clicks on the 'play' button and has enough rights to write on this branch (when:manual)
Publish to NPM:
  stage: deploy
  extends:
    - .install
    - .npm-publication
  when: manual
  variables:
    PUBLISH: 0
    VERSION_POLICY: "individualVersion"
  dependencies:
    - Build for NPM publication
  script:
    # These values must be set to make Rush works
    - git config --local user.name "FABERNOVEL"
    - git config --local user.email "heart@fabernovel.com"
    # Create the --publish option for rush publish command.
    - if (( $PUBLISH == 1 )); then PUBLISH_OPTION="--publish"; else PUBLISH_OPTION=""; fi
    # Fix 'npm cannot run in wd' error
    - echo 'unsafe-perm = true' >> ~/.npmrc
    - echo "Publishing to NPM the packages with the ${VERSION_POLICY} version policy..."
    # Update the rush.json repository url with the one from the repo, to make the rush publish commands
    - sed -i -e "s/$HOST_REPO_PIPELINE_URL/$HOST_REPO_URL/g" rush.json
    - node common/scripts/install-run-rush.js version
      --bump
      --target-branch $CI_COMMIT_REF_NAME
      --version-policy $VERSION_POLICY
    # $CI_COMMIT_REF_NAME is 'master', as long as this job is restricted to run on the 'master' branch
    - node common/scripts/install-run-rush.js publish
      --include-all
      --npm-auth-token $NPM_TOKEN
      $PUBLISH_OPTION
      --set-access-level public
      --target-branch $CI_COMMIT_REF_NAME
      --version-policy $VERSION_POLICY

pages:
  stage: deploy
  script:
    - mkdir .public
    - cp -r website/* .public
    - mv .public public
  artifacts:
    paths:
    - public
  only:
    - branches
    - /^master$/
