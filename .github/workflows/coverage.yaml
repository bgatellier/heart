name: Coverage

# run tests on the lower Node.js supported version and generate coverage.
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  test:
    name: üêõ Run tests (18)
    runs-on: ubuntu-latest
    outputs:
      # Output the artifact upload id
      artifact-upload-id: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    timeout-minutes: 8
    defaults:
      run:
        shell: bash
    env:
      NODE_VERSION: 18.20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Node.js version
        run: sed -Ei 's/(node = ).*/\1"^${{ env.NODE_VERSION }}"/' .prototools

      - name: Setup Moon
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Build packages
        run: moon run :build
        env:
          # disable Chrome download on puppeteer install. see https://pptr.dev/api/puppeteer.configuration
          PUPPETEER_SKIP_CHROME_DOWNLOAD: true

      - name: Run tests & generate coverage report
        run: pnpm vitest --coverage

      - name: Archive code coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage/clover.xml
          retention-days: 1

  coverage:
    needs: test
    name: ‚¨ÜÔ∏è Upload code coverage report to Codecov
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        shell: bash

    steps:
      - name: Download report from previous job
        uses: actions/download-artifact@v4
        with:
          name: code-coverage-report

      - name: Upload report to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
