name: üßπ Pull request

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  syntax_changelog:
    name: Syntax & changelog
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Install
        run: node common/scripts/install-run-rush.js install

      - name: üèó Build
        run: node common/scripts/install-run-rush.js rebuild

      - name: üìù Verify missing changelogs
        run: node common/scripts/install-run-rush.js change --target-branch origin/$GITHUB_BASE_REF --verify -v

      - name: üíÖ Lint
        # --verbose allows to display warnings from ESLint
        run: node common/scripts/install-run-rush.js lint --verbose

  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        node_version: [18, 19, 20]
    outputs:
      module_names: ${{ steps.list_directories.outputs.module_names }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: Install
        run: node common/scripts/install-run-rush.js install

      - name: üèó Build
        run: node common/scripts/install-run-rush.js rebuild

      - name: üêõ Test
        # use --coverage option to generate coverage reports for their upload in the next job
        run: node common/scripts/install-run-rush.js test --coverage

      - name: Archive code coverage reports
        # coverage results are the same whatever the Node.js version used.
        # so in order to reduce the machine-time consumption (memory, CPU...), we execute the 2 following steps once.
        if: ${{ matrix.node_version == 18 }}
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-reports
          path: ./modules/*/coverage/*.xml
          retention-days: 1

      - name: List module names for which a coverage report has been generated
        if: ${{ matrix.node_version == 18 }}
        id: list_directories
        # the module names are provided as an array in a stringified JSON, as it seems to be the only way to pass arrays with outputs.
        # the stringified JSON is constructed manually.
        # directories_names is an array of strings formatted like that: ./modules/common/coverage.
        # the cut command splits the strings according to the / cahracter and takes the 3rd element.
        # syntax checked with https://www.shellcheck.net/
        # https://yaml-multiline.info/
        run: |
          directories_names=$(find ./modules -name coverage)
          module_names=()
          for directory_name in $directories_names;
          do
              module_name="$(cut -d / -f 3 <<< "$directory_name")"
              module_names+=("\"$module_name\"")
          done
          module_names_json=$( IFS=$','; echo "[${module_names[*]}]" )
          echo "module_names=$module_names_json" >> "$GITHUB_OUTPUT"

  upload_coverage_reports:
    name: Upload coverage reports
    needs: test
    strategy:
      matrix:
        module_name: ${{ fromJSON(needs.test.outputs.module_names) }}
    uses: ./.github/workflows/upload_coverage_report.yaml
    with:
      module_name: ${{ matrix.module_name }}
