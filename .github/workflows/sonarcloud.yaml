name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: 🐛 Run tests (18)
    runs-on: ubuntu-latest
    outputs:
      # Output the artifact upload id
      artifact-upload-id: ${{ steps.artifact-upload-step.outputs.artifact-id }}
    timeout-minutes: 8
    defaults:
      run:
        shell: bash
    env:
      NODE_VERSION: 18
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Node.js version
        run: sed -Ei 's/(node = ).*/\1"^${{ env.NODE_VERSION }}"/' .prototools

      - name: Setup Moon
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Run tests & generate coverage reports
        run: moon run :coverage

      - name: Archive code coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: /**/lcov.info
          retention-days: 1
  
  sonarcloud:
    name: SonarCloud Scan
    strategy:
      matrix:
        package-id:
          - api
          - cli
          - common
          - greenit
          - lighthouse
          - mysql
          - observatory
          - slack
          - ssllabs-server
    uses: ./.github/workflows/sonarcloud-reusable.yaml
    with:
      package-id: ${{ matrix.package-id }}
