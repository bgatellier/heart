name: Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: Code coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-id:
          - api
          - cli
          - common
          - greenit
          - lighthouse
          - mysql
          - observatory
          - slack
          - ssllabs-server
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Node.js version
        run: sed -Ei 's/(node = ).*/\1"^${{ env.NODE_VERSION }}"/' .prototools
        env:
          NODE_VERSION: 18

      - name: Setup Moon
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Generate coverage report
        run: moon run ${{ matrix.package-id }}:coverage

      - run: cat lcov.info
        working-directory: packages/${{ matrix.package-id }}/coverage/

      - uses: SonarSource/sonarcloud-github-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: packages/${{ matrix.package-id }}/
          args: >
            -Dsonar.organization=bgatellier
            -Dsonar.projectKey=scodi-${{ matrix.package-id }}
            -Dsonar.sources=src/
            -Dsonar.tests=tests/
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
