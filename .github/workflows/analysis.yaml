name: Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  affected-projects:
    name: Guess affected projects
    runs-on: ubuntu-latest
    outputs:
      list: ${{ steps.moon-query.outputs.json }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Moon
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      # the moon command outputs a multi-lines content:
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#multiline-strings
      # https://github.com/orgs/community/discussions/26288#discussioncomment-3876281
      #
      # the partial schema of the output is: { "projects": [{ "id": ""}, { "id": ""}] }
      - name: Retrieve affected projects
        id: moon-query
        run: |
          delimiter="$(openssl rand -hex 8)"
          echo "json<<${delimiter}" >> "$GITHUB_OUTPUT"
          echo "$(moon query touched-files | moon query projects --affected --tags scodi --json)" >> "$GITHUB_OUTPUT"
          echo "${delimiter}" >> "$GITHUB_OUTPUT"

  sonarcloud:
    name: Code coverage
    runs-on: ubuntu-latest
    needs: affected-projects
    strategy:
      matrix:
        project-id: ${{ fromJSON(needs.affected-projects.outputs.list).projects.*.id }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Node.js version
        run: sed -Ei 's/(node = ).*/\1"^${{ env.NODE_VERSION }}"/' .prototools
        env:
          NODE_VERSION: 18

      - name: Setup Moon toolchain
        uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Generate coverage report
        run: moon run ${{ matrix.project-id }}:coverage

      - uses: SonarSource/sonarcloud-github-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: packages/${{ matrix.project-id }}/
          args: >
            -Dsonar.organization=bgatellier
            -Dsonar.projectKey=scodi-${{ matrix.project-id }}
            -Dsonar.sources=src/
            -Dsonar.tests=tests/
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
